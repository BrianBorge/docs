
message <<-INTRO
For this workshop we asked OSX and Windows users to use a virtual machine.  
Linux and Chromebook users can skip to the next step.
INTRO

goals do
  goal "Define virtual machine, Vagrant, and Virtual Box"
  goal "Find your workspace directory"
  goal "Start and halt Vagrant"
  goal "Connect to and exit Vagrant"
end

message <<-CONTENTS
Before we begin, we have to install Ruby on your laptop.  Individually, this isn\'t too hard.  Getting 75+ people ready at a workshop is a big logistical challenge.  Participants in the January 2014 workshop are using four different operating systems,  with at least 15 versions all together.  

To get going quickly and to have things work the same for everyone, we\'re using a virtual machine. Using a virtual machine adds some extra steps, which we'll practice here. 
CONTENTS


step do
  message "First, let\'s define virtual machine."
  message "A virtual machine - **vm** for short- is a snapshot of all the software on a computer. The snapshot is called an image. You downloaded and saved the image file in the pre-workshop steps."
  message "We\'ve made an image of a Linux machine with Ruby and other tools installed."
end

step do
  message <<-CONTENTS
  By itself, a vm image is just a file like any other.  It needs something to run it.  

  We\'re using VirtualBox.  If a vm image is a fish, VirtualBox is the aquarium it lives in. It knows how to translate the features of this Linux image into something Windows or OSX understands, and display it on your monitor.  It knows how to translate your keyboard and mouse input to something the Linux machine can use. 

  Mac users may already be familiar with running Windows images with Parallels, or with VMWare Fusion.  
CONTENTS
end


step do
  message <<-CONTENTS 
  \'Vagrant\' is a tool for running a virtual machine.   It will stop and start the vm, and let you connect to it so you can use it. 


During the Installfest you made a folder called workspace and ran some vagrant commands to set up the RailsBridge image.  

It createad a configuration file, named Vagrantfile.  Vagrant needs the config file in order to run the machine. 


CONTENTS

end






step do
  message <<-CONTENTS
To run Ruby on our image, we have to start the virtual machine, then connect to it.  The vm only needs to be started once.  It will keep running until you halt it or reboot your machine.
CONTENTS
  console 'vagrant up'
  result <<-CONTENTS

Bringing machine 'default' up with 'virtualbox' provider...
[default] Clearing any previously set forwarded ports...
[default] Clearing any previously set network interfaces...
[default] Preparing network interfaces based on configuration...
[default] Forwarding ports...
[default] -- 22 => 2222 (adapter 1)
[default] -- 3000 => 3000 (adapter 1)
[default] Booting VM...
[default] Waiting for machine to boot. This may take a few minutes...
[default] Machine booted and ready!
[default] The guest additions on this VM do not match the installed version of
VirtualBox! In most cases this is fine, but in rare cases it can
prevent things such as shared folders from working properly. If you see
shared folder errors, please make sure the guest additions within the
virtual machine match the version of VirtualBox you have installed on
your host and reload your VM.

Guest Additions Version: 4.2.0
VirtualBox Version: 4.3
[default] Mounting shared folders...
[default] -- /vagrant
[default] VM already provisioned. Run `vagrant provision` or use `--provision` to force it

CONTENTS

message "What happens if it\'s already running?"
console "vagrant up"
result <<-CONTENTS
Bringing machine 'default' up with 'virtualbox' provider...
[default] VirtualBox VM is already running.
CONTENTS
end


explanation do
end

 next_step 'running_programs_from_a_file'